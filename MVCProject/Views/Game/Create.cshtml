@using MVCProject.Application.Commands.CreateGame
@model CreateGameCommand
@{
    ViewData["Title"] = "Create Game";
}

<h1>Create New Game</h1>

<hr/>

<div class="row">
    <div class="col-md-4">
        <form action="/Game/Create" method="post">
            <div class="form-group mb-3">
                <label class="control-label" asp-for="Name">Name</label>
                <input class="form-control" type="text" asp-for="Name"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label class="control-label" asp-for="Player2!.Name">Opponent</label>
                <input class="form-control" type="text" asp-for="Player2!.Name"/>
                <span asp-validation-for="Player2!.Name" class="text-danger"></span>
            </div>

         

            <div class="d-flex gap-2">
                <div class="form-group mb-3">
                    <input class="btn main-btn" type="submit" value="Create"/>
                </div>
                <div>
                    <button id="cancelButton" class="btn danger-btn" type="button">Cancel</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="~/lib/aspnet/signalr/dist/browser/signalr.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/gamehub")
                .build();

            connection.start();

            $("#cancelButton").click(() => {
                window.location.href = "/Game/Index";
            });
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
